<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ja"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://blog.frogapp.net/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blog.frogapp.net/" rel="alternate" type="text/html" hreflang="ja" /><updated>2023-02-01T21:37:14+09:00</updated><id>https://blog.frogapp.net/feed.xml</id><title type="html">カエル文書箱</title><subtitle>デジタルから間違い探しまで、種々雑多なブログ</subtitle><author><name>Frog</name></author><entry><title type="html">一言日記(2023年2月)</title><link href="https://blog.frogapp.net/2023-02/diary" rel="alternate" type="text/html" title="一言日記(2023年2月)" /><published>2023-02-01T00:00:00+09:00</published><updated>2023-02-01T00:00:00+09:00</updated><id>https://blog.frogapp.net/2023-02/diary</id><content type="html" xml:base="https://blog.frogapp.net/2023-02/diary"><![CDATA[<p>冬の終わりがそろそろ見えてきたような、きていないような……</p>

<p><br /></p>

<p><strong>2月1日(水)　GitHub</strong></p>

<p>GitHub の通知がえらいことになっていた。早く処理せねば。</p>]]></content><author><name>Frog</name></author><category term="一言日記" /><category term="一言日記" /><summary type="html"><![CDATA[冬の終わりがそろそろ見えてきたような、きていないような……]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.frogapp.net/assets/images/2023/02/01/diary-202302.webp" /><media:content medium="image" url="https://blog.frogapp.net/assets/images/2023/02/01/diary-202302.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">コメント欄を非表示にします</title><link href="https://blog.frogapp.net/2023-01/hide-comments" rel="alternate" type="text/html" title="コメント欄を非表示にします" /><published>2023-01-24T00:00:00+09:00</published><updated>2023-01-24T00:00:00+09:00</updated><id>https://blog.frogapp.net/2023-01/hide-comments</id><content type="html" xml:base="https://blog.frogapp.net/2023-01/hide-comments"><![CDATA[<p>表題の通り、9月下旬から実証実験を行っていたコメント欄を一旦非表示にします。</p>

<p>理由は単純で、<strong>「このブログにはまだコメント欄は早すぎた」</strong>ためです。</p>

<p>今までコメント欄に書き込んでくださった方には申し訳なく思っておりますが、何卒ご理解の程よろしくお願い致します。</p>

<p>なお、ご意見等は引き続き<a href="https://frogapp.net/contact">お問い合わせフォーム</a>で受け付けております。</p>]]></content><author><name>Frog</name></author><category term="お知らせ" /><category term="お知らせ" /><summary type="html"><![CDATA[表題の通り、9月下旬から実証実験を行っていたコメント欄を一旦非表示にします。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.frogapp.net/assets/images/2023/01/23/comment.webp" /><media:content medium="image" url="https://blog.frogapp.net/assets/images/2023/01/23/comment.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">【Google Pixel】外出したらマナーモードを自動でオンにする</title><link href="https://blog.frogapp.net/2023-01/pixel-rule" rel="alternate" type="text/html" title="【Google Pixel】外出したらマナーモードを自動でオンにする" /><published>2023-01-21T00:00:00+09:00</published><updated>2023-01-21T00:00:00+09:00</updated><id>https://blog.frogapp.net/2023-01/pixel-rule</id><content type="html" xml:base="https://blog.frogapp.net/2023-01/pixel-rule"><![CDATA[<p>Pixel の設定を眺めていたら、「ルール」という、現在地や接続している Wi-Fi に応じてマナーモードのオン / オフを切り替えられる非常に便利な機能を発見しました。</p>

<p>今回は、そんな「ルール」機能の設定方法を解説します。</p>

<p>「マナーモードにし忘れて、人前で着信音が鳴ってしまった…」という恥ずかしい経験がある方は多いと思いますが、この機能を使うと家の外では勝手にマナーモードになるのでそのような失敗もなくなります。</p>

<p>設定も、画面の指示に従ってポチポチしていくだけなので非常に簡単でした。</p>

<p>なお、この機能は Pixel 限定ですが、他の Android スマホでも同様の機能が用意されている場合がありますし (Galaxy の Bixby Routines など)、そうでなくても同様のことができるアプリがあると思います。</p>

<p>iPhone の場合はマナーモードの自動切り替えはできませんが、「ショートカット」アプリで集中モードを切り替えるオートメーションを作成すれば似たようなことができます。</p>

<p>ただし、集中モードでは通知音だけでなくバイブも鳴らなくなってしまう点は注意が必要です。</p>

<h2 id="設定内容">設定内容</h2>

<p>この記事では、以下のように設定する方法を解説します。実際に僕も使っている設定です。</p>

<ul>
  <li>自宅の Wi-Fi に接続されたらマナーモードオフ</li>
  <li>自宅の Wi-Fi から切断されたらマナーモードオン<br />(カフェのフリー Wi-Fi など、自宅以外の Wi-Fi に接続されたときもマナーモードオン)</li>
</ul>

<p>なお、この記事は Android 13 の Pixel 7 を基に解説しています。Android バージョンや機種によっては画面が一部異なる場合がありますがご了承下さい。</p>

<h2 id="設定方法">設定方法</h2>

<h3 id="自宅の-wi-fi-に接続されたらマナーモードをオフにする">自宅の Wi-Fi に接続されたらマナーモードをオフにする</h3>

<p>まずは、「自宅の Wi-Fi に接続されたらマナーモードをオフにする」部分の設定です。</p>

<p>「設定」アプリを開き、「システム」→「ルール」と進みます。</p>

<p><img src="/assets/images/2023/01/21/settings.webp" alt="設定アプリ→システム→ルールとタップしていく" /></p>

<p>「ルール」機能を使用するにあたって、いくつか権限を許可する必要があります。</p>

<p>まずはじめに、「位置情報へのアクセスを常に許可」のスイッチをオンにします。</p>

<p><img src="/assets/images/2023/01/21/allow-location.webp" alt="「位置情報へのアクセスを常に許可」のスイッチをオンにする" /></p>

<p>「バックグラウンドでの実行」の許可を求められた場合は、「次へ」をタップし、「許可」します。</p>

<p><img src="/assets/images/2023/01/21/allow-background.webp" alt="「バックグラウンドでの実行」の許可を求められた場合は、「次へ」をタップする。その後、「許可」をタップする。" /></p>

<p>「位置情報へのアクセスを常に許可」のスイッチが表示されず、代わりにメッセージが表示された場合は、「次へ」をタップし、「権限」→「位置情報」→「常に許可」をタップします。</p>

<p>「正確な位置情報を使用」もオンにしておきます。</p>

<p><img src="/assets/images/2023/01/21/allow-location-always.webp" alt="「この機能を使用するには、[権限]に移動し…」のメッセージが表示された場合は、「次へ」をタップし、「権限」、「位置情報」の順にタップしていき、" /></p>

<p><img src="/assets/images/2023/01/21/location-always.webp" alt="「常に許可」をタップする。「正確な位置情報を使用」もオンにする。" /></p>

<p>これだけ権限を付与するのには抵抗がある方もいるかも知れませんが、「設定サービス」は Android のシステムに付属している信頼できるサービスなので問題ありません。</p>

<p>また、電池使用量も僕が使っている限りでは目に見えて増えることはありませんでした。</p>

<p>以上で下準備は完了です。</p>

<p>いよいよルールの作成に入っていきます。</p>

<p>「ルール」の設定画面に戻り、「ルールの追加」をタップします。</p>

<p><img src="/assets/images/2023/01/21/add-rule.webp" alt="「ルール」の設定画面で「ルールの追加」をタップする。" /></p>

<p>このような画面になったら、「Wi-Fi ネットワークまたは場所を追加」をタップします。</p>

<p>今回は「自宅の Wi-Fi への接続」を条件にしたいので、表示されたポップアップでは「Wi-Fi ネットワーク」をタップします。</p>

<p><img src="/assets/images/2023/01/21/add-wi-fi.webp" alt="「Wi-Fi ネットワークまたは場所を追加」をタップする。ポップアップが表示されたら「Wi-Fi ネットワーク」をタップする。" /></p>

<p>保存されている Wi-Fi ネットワークが一覧で表示されるので、自宅の Wi-Fi をタップします。</p>

<p>※設定段階では、条件に設定する Wi-Fi (ここでは自宅の Wi-Fi) に接続されている必要はありません。</p>

<p><img src="/assets/images/2023/01/21/select-wi-fi.webp" alt="自宅の Wi-Fi を選んでタップする。" /></p>

<p>「デバイスの着信音が鳴るように設定」を選択します。</p>

<p><img src="/assets/images/2023/01/21/edit-rule.webp" alt="「デバイスの着信音が鳴るように設定」をタップする。「ルールが有効になったら通知を送信」はお好みで。最後に「追加」をタップ。" /></p>

<p>「ルールが有効になったら通知を送信」をオンにすると、自宅の Wi-Fi に接続されマナーモードがオフになるたびに通知が届きます。</p>

<p>通知が毎回届くのは鬱陶しい上、後述する設定を行えば一目でマナーモードがオンかを確認できるので、ここではオフにしておきます。</p>

<p>最後に「追加」をタップして完了です。</p>

<h3 id="マナーモードの状態を一目で確認できるようにする">マナーモードの状態を一目で確認できるようにする</h3>

<p>この設定は必須ではありませんが、設定しておくとマナーモードがオンのときにステータスバーにアイコンが表示されるようになり、便利なのでついでに紹介します。</p>

<p>(下の画像の一番左側に表示されているのがマナーモードのアイコンです。)</p>

<p><img src="/assets/images/2023/01/21/silent-status.webp" alt="ステータスバーに表示されているマナーモードのアイコン" /></p>

<p>それでは、設定していきます。</p>

<p>「設定」アプリを開き、「着信音とバイブレーション」に進みます。</p>

<p>一番下までスクロールし、「バイブレーションモードのときにアイコンを常に表示」をオンにします。</p>

<p><img src="/assets/images/2023/01/21/show-icon.webp" alt="「着信音とバイブレーション」の設定で、「バイブレーションモードのときにアイコンを常に表示」をオンにする。" /></p>

<p>これで完了です。</p>

<h3 id="自宅の-wi-fi-から切断されたらマナーモードをオンにする">自宅の Wi-Fi から切断されたらマナーモードをオンにする</h3>

<p>最後に、「自宅の Wi-Fi から切断されたらマナーモードをオンにする」部分の設定です。</p>

<p>設定をする前に、既に自宅の Wi-Fi に接続されている場合は一旦 Wi-Fi をオフにしておきます。</p>

<p>Wi-Fi のオフの仕方がわからない場合は、Google アシスタント (デフォルトでは電源ボタン長押しで起動) に「Wi-Fi をオフにして」と言えばオフにしてくれます。</p>

<p>Wi-Fi がオフになったら、マナーモードを有効にします。</p>

<p>マナーモードは、音量ボタンを押すと出てくる音量調節バーの上側にある、色がついた丸いアイコンをタップし、その後長方形の脇に線があるアイコン (一番上のアイコン) をタップすると有効にできます。</p>

<p><img src="/assets/images/2023/01/21/set-silent-mode.webp" alt="マナーモードに設定する。" /></p>

<p>ちなみに、鐘に斜線が引いてあるアイコンはサイレントモードを表しており、このモードにすると通知音に加えてバイブも鳴らなくなります。</p>

<p>バイブも鳴らしたくない場合は、鐘に斜線が引いてあるアイコンをタップします。</p>

<p>これで、設定は一通り完了です！</p>

<h2 id="動作確認">動作確認</h2>

<p>では、正しく設定ができたか確認してみます。</p>

<p>まず、自宅の Wi-Fi に接続されている状況でマナーモードが無効になっていることを確認します。</p>

<p>音量ボタンを押すと出てくる音量調節バーの上側のアイコンが「鐘」の形になっていれば OK です。</p>

<p>ステータスバーの Wi-Fi アイコンの左側に何も表示されていないことからも確認できます。</p>

<p>次に、自宅の Wi-Fi から切断されたらマナーモードが有効になることを確認します。</p>

<p>実際に外出してみてもいいですし、外出しなくても Wi-Fi をオフにすれば確認できます。</p>

<p>音量ボタンを押すと出てくる音量調節バーの上側のアイコンが「長方形の脇に線がある」形になっていれば OK です。</p>

<p>先ほどの「自宅の Wi-Fi から切断されたらマナーモードをオンにする」でサイレントモードにした場合は、「鐘に斜線が引いてある」形になります。</p>

<p>ステータスバーの「4G」あるいは「5G」表記の左側に、マナーモードあるいはサイレントモードを表すアイコンが表示されていることからも確認できます。</p>

<p><img src="/assets/images/2023/01/21/check.webp" alt="自宅の Wi-Fi に接続されているときはマナーモードがオフに、切断されているときはマナーモードがオンになる。" /></p>

<h2 id="終わりに">終わりに</h2>

<p>以上、自宅以外ではマナーモードを自動でオンにする方法でした。</p>

<p>現時点の「ルール」では着信音関連の設定しかできませんが、今後はより幅広い設定ができるようになって欲しいなぁと思いました。</p>]]></content><author><name>Frog</name></author><category term="スマホ" /><category term="スマホ" /><category term="Google" /><category term="Pixel" /><summary type="html"><![CDATA[Pixel の設定を眺めていたら、「ルール」という、現在地や接続している Wi-Fi に応じてマナーモードのオン / オフを切り替えられる非常に便利な機能を発見しました。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.frogapp.net/assets/images/2023/01/21/rule.webp" /><media:content medium="image" url="https://blog.frogapp.net/assets/images/2023/01/21/rule.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Redis が無限に再接続し続けた原因はたった1文字のタイプミスでした</title><link href="https://blog.frogapp.net/2023-01/redis" rel="alternate" type="text/html" title="Redis が無限に再接続し続けた原因はたった1文字のタイプミスでした" /><published>2023-01-08T00:00:00+09:00</published><updated>2023-01-08T00:00:00+09:00</updated><id>https://blog.frogapp.net/2023-01/redis</id><content type="html" xml:base="https://blog.frogapp.net/2023-01/redis"><![CDATA[<p>現在作っている学校用の Node.js (Express) アプリで <a href="https://upstash.com/" target="_blank" rel="noopener noreferrer">Upstash</a> の Redis を使おうとしたところ、切断→再接続を超高速で無限に繰り返す謎の不具合に悩まされたのですが、結果あっさり解決してしまった話です。</p>

<p>※この記事では本来は「URI」と表記するものであっても、わかりやすさを重視し「URL」に統一して表記しています。予めご了承下さい。</p>

<h2 id="問題コード">問題コード</h2>

<p>では早速、問題になったコードです。</p>

<p>ライブラリは ioredis と connect-redis を使って書きました。</p>

<p>また、以下のコードは Redis の部分のみを抜粋しているので、実際に動かす場合はその他の必要なコードを追加する必要があります。</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">Redis</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">ioredis</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">connectRedis</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">connect-redis</span><span class="dl">'</span><span class="p">);</span>

<span class="c1">// Redis</span>
<span class="kd">const</span> <span class="nx">RedisStore</span> <span class="o">=</span> <span class="nx">connectRedis</span><span class="p">(</span><span class="nx">session</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">redisClient</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Redis</span><span class="p">(</span><span class="s2">`redis://</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_USER</span><span class="p">}</span><span class="s2">:</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_PASSWORD</span><span class="p">}</span><span class="s2">@</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_ENDPOINT</span><span class="p">}</span><span class="s2">:</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_PORT</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>

<span class="nx">redisClient</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">error</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">Redis error:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">redisClient</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">connect</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Redis connected</span><span class="dl">'</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">redisClient</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">reconnecting</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Redis reconnecting</span><span class="dl">'</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">redisClient</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">end</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Redis disconnected</span><span class="dl">'</span><span class="p">);</span>
<span class="p">});</span>
</code></pre></div></div>

<p>このプログラムを実行した結果、</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Redis connected
Redis reconnecting
Redis connected
Redis reconnecting
Redis connected
Redis reconnecting
Redis connected
Redis reconnecting
Redis connected
Redis reconnecting
Redis connected
Redis reconnecting
Redis connected
Redis reconnecting
Redis connected
Redis reconnecting
Redis connected
Redis reconnecting
    ・
    ・
    ・
(以下、無限ループ)
</code></pre></div></div>

<p>こんな感じで、切断と再接続を超高速で無限に繰り返すという謎の挙動になってしまいました。</p>

<p>数日間悩み、しまいには Upstash の不備なんじゃないかとも思いながらも、ドキュメントを眺めていたらふと気が付きました。</p>

<h2 id="redis-じゃなくて-rediss-じゃね">redis:// じゃなくて rediss:// じゃね？</h2>

<p>先程のコードの6行目</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">redisClient</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Redis</span><span class="p">(</span><span class="s2">`redis://</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_USER</span><span class="p">}</span><span class="s2">:</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_PASSWORD</span><span class="p">}</span><span class="s2">@</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_ENDPOINT</span><span class="p">}</span><span class="s2">:</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_PORT</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
</code></pre></div></div>

<p>の redis:// の部分を rediss:// と、s を1つ多くしたらすんなり動いてしまいました。</p>

<p>そういえばデータベースを作るときに SSL/TLS を有効にした気が…</p>

<p><img src="/assets/images/2023/01/08/tls.webp" alt="TLS (SSL) が有効になっている" /></p>

<p>ちゃんと有効になってました。</p>

<p>ウェブサイトでも SSL/TLS が有効なページは、URL が http:// ではなく http<strong>s</strong>:// と、s が1個多くついた文字列で始まるように、Redis も、SSL/TLS が有効だと redis<strong>s</strong>:// と s が1個多くつくようです。</p>

<p>先程のコードで指定した Redis の URL は redis:// から始まっており、SSL/TLS が有効になっていませんでした。</p>

<p>だから、Upstash 側で弾かれていたわけです。</p>

<p>以上のことをまとめると、正しいコードは以下のようになります。</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">Redis</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">ioredis</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">connectRedis</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">connect-redis</span><span class="dl">'</span><span class="p">);</span>

<span class="c1">// Redis</span>
<span class="kd">const</span> <span class="nx">RedisStore</span> <span class="o">=</span> <span class="nx">connectRedis</span><span class="p">(</span><span class="nx">session</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">redisClient</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Redis</span><span class="p">(</span><span class="s2">`rediss://</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_USER</span><span class="p">}</span><span class="s2">:</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_PASSWORD</span><span class="p">}</span><span class="s2">@</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_ENDPOINT</span><span class="p">}</span><span class="s2">:</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_PORT</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>

<span class="nx">redisClient</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">error</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">Redis error:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">redisClient</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">connect</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Redis connected</span><span class="dl">'</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">redisClient</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">reconnecting</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Redis reconnecting</span><span class="dl">'</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">redisClient</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">end</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Redis disconnected</span><span class="dl">'</span><span class="p">);</span>
<span class="p">});</span>
</code></pre></div></div>

<p>6行目で指定している URL を、<code class="language-plaintext highlighter-rouge">redis://</code> ではなく <code class="language-plaintext highlighter-rouge">rediss://</code> で始めるようにしました。</p>

<h2 id="開発環境と本番環境で切り替える">開発環境と本番環境で切り替える</h2>

<p>ただ、開発環境に用意した Redis は SSL/TLS に対応していないことが多いと思います。</p>

<p>その場合、以下のようにして開発環境と本番環境で SSL/TLS の有効・無効を切り替えるといい感じになります。</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">Redis</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">ioredis</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">connectRedis</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">connect-redis</span><span class="dl">'</span><span class="p">);</span>

<span class="c1">// Redis</span>
<span class="kd">const</span> <span class="nx">RedisStore</span> <span class="o">=</span> <span class="nx">connectRedis</span><span class="p">(</span><span class="nx">session</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">redisClient</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Redis</span><span class="p">(</span><span class="s2">`</span><span class="p">${</span><span class="nx">app</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">env</span><span class="dl">'</span><span class="p">)</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">development</span><span class="dl">'</span> <span class="p">?</span> <span class="dl">'</span><span class="s1">redis://</span><span class="dl">'</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">rediss://</span><span class="dl">'</span><span class="p">}${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_USER</span><span class="p">}</span><span class="s2">:</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_PASSWORD</span><span class="p">}</span><span class="s2">@</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_ENDPOINT</span><span class="p">}</span><span class="s2">:</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REDIS_PORT</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>

<span class="nx">redisClient</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">error</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">Redis error:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">redisClient</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">connect</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Redis connected</span><span class="dl">'</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">redisClient</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">reconnecting</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Redis reconnecting</span><span class="dl">'</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">redisClient</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">end</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Redis disconnected</span><span class="dl">'</span><span class="p">);</span>
<span class="p">});</span>
</code></pre></div></div>

<p>6行目の</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">app</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">env</span><span class="dl">'</span><span class="p">)</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">development</span><span class="dl">'</span> <span class="p">?</span> <span class="dl">'</span><span class="s1">redis://</span><span class="dl">'</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">rediss://</span><span class="dl">'</span>
</code></pre></div></div>

<p>の部分がポイントです。</p>

<p><code class="language-plaintext highlighter-rouge">app.get('env')</code> で、環境変数 <code class="language-plaintext highlighter-rouge">NODE_ENV</code> の値を読み取り、開発環境か本番環境かを判定します。</p>

<p><code class="language-plaintext highlighter-rouge">NODE_ENV</code> が <code class="language-plaintext highlighter-rouge">development</code>、すなわち開発環境であれば <code class="language-plaintext highlighter-rouge">redis://</code> を、そうでなければ <code class="language-plaintext highlighter-rouge">rediss://</code> を使うという動作になります。</p>

<p>以上、数日間悩み続けたトラブルがたった1文字加えるだけで解決してしまった話でした。</p>

<p>この記事が、同じトラブルに遭遇している方の一助になれば幸いです。</p>

<h2 id="余談と愚痴">余談と愚痴</h2>

<p>誤ったコードで再接続を無限に繰り返した結果、昨日のリクエスト数がすごいことになりました。</p>

<p><img src="/assets/images/2023/01/08/requests-graph.webp" alt="リクエスト数の推移; 昨日3931、本日87" /></p>

<p>それほど長くは動かしていないのですが、ループの速度がものすごく、ログが残像しか見えない程の速度で流れていたのでこのくらい行っちゃうよなぁという感じです。</p>

<p>で、なぜこんなに悩まされたのかというと、Upstash の管理画面からコピペできる URL が SSL/TLS 非対応のもの (redis:// から始まるもの) だったんですよね。</p>

<p>もしかして CLI からアクセスする場合は rediss:// ではなく redis:// を使う必要があるんでしょうかね？</p>

<p>そこまで調べきれていないのでなんとも言えませんが、ちょっと不親切だなと思いました。</p>

<p>ちなみに、Upstash さんはご親切に各言語・ライブラリでのコードの書き方の例を表示してくれるのですが、そちらはちゃんと SSL/TLS 対応の URL になっていました。</p>

<p>うん、そっちをよく確認しなかった僕の方が悪い。</p>]]></content><author><name>Frog</name></author><category term="プログラミング" /><category term="プログラミング" /><category term="Redis" /><category term="トラブル対処" /><summary type="html"><![CDATA[現在作っている学校用の Node.js (Express) アプリで Upstash の Redis を使おうとしたところ、切断→再接続を超高速で無限に繰り返す謎の不具合に悩まされたのですが、結果あっさり解決してしまった話です。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.frogapp.net/assets/images/2023/01/08/redis.webp" /><media:content medium="image" url="https://blog.frogapp.net/assets/images/2023/01/08/redis.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">一言日記(2023年1月)</title><link href="https://blog.frogapp.net/2023-01/diary" rel="alternate" type="text/html" title="一言日記(2023年1月)" /><published>2023-01-03T00:00:00+09:00</published><updated>2023-01-03T00:00:00+09:00</updated><id>https://blog.frogapp.net/2023-01/diary</id><content type="html" xml:base="https://blog.frogapp.net/2023-01/diary"><![CDATA[<p>実はかつて「蛙年」というのがありました。その後、とある人が「蛙といえば卵だろ！」と言って数百年前に「卵年」になったのですが、年末年始で忙しさで「卵」の点を抜かして「卯」と書く人が続出し、気づいたときには「卯年」になっていたそうです。つまり、「卯年」は元を辿れば「蛙年」なのです。(※諸説あり)</p>

<p><br /></p>

<p><strong>1月1日(日)　帰省</strong></p>

<p>親の実家に帰省。色々話せて楽しかった。</p>

<p><br /></p>

<p><strong>1月2日(月)　田舎あるある</strong></p>

<p>一般道を高速道路並みの速さで走る車がいる。</p>

<p><br /></p>

<p><strong>1月3日(火)　あっという間の年末年始</strong></p>

<p>年末年始あっという間だったな。冬休みももう少しで終わってしまう。</p>

<p><br /></p>

<p><strong>1月4日(水)　レポート</strong></p>

<p>まずい、レポート書かねば。</p>

<p><br /></p>

<p><strong>1月5日(木)　レポート</strong></p>

<p>レポートを死にもの狂いで終わらせた。なんとか締め切りに間に合った。</p>

<p><br /></p>

<p><strong>1月6日(金)　サーバー移転</strong></p>

<p>とあるサービスのサーバーを移転中。これで速くなると良いなぁ。</p>

<p><br /></p>

<p><strong>1月7日(土)　1日潰す</strong></p>

<p>またもや開発で1日潰れた。課題やらないといけないのに…</p>

<p><br /></p>

<p><strong>1月8日(日)　外食</strong></p>

<p>久しぶりに家族で外食。コスト削減のためか、ロボットが導入されていた。でも稼働していなかった。</p>

<p><br /></p>

<p><strong>1月9日(月)　最適化完了</strong></p>

<p>作っているサイトの裏側の最適化が終わった。ちょっと速くなった？</p>

<p><br /></p>

<p><strong>1月10日(火)　もう10日目</strong></p>

<p>2023年になってからもう10日目？</p>

<p><br /></p>

<p><strong>1月11日(水)　111</strong></p>

<p>1月11日。111。語呂が良い。</p>

<p><br /></p>

<p><strong>1月12日(木)　mozc-ut</strong></p>

<p>mozc-ut 公開終了の件。誰しも意見を自由に言う権利がある一方で、開発者は開発をいつでも自由に辞める権利があるから、「どっちも悪くない」というのが僕の意見。いずれにせよ、持続可能な OSS を実現するにはどうしたら良いかを真剣に考えなければならない時期が来たと感じる。</p>

<p><br /></p>

<p><strong>1月13日(金)　13日の金曜日</strong></p>

<p>今日は13日の金曜日。特に不吉なことはなかったが。</p>

<p><br /></p>

<p><strong>1月14日(土)　ブログ…</strong></p>

<p>週末なのでブログ記事を書かなければならないのだが、気付いたら1日が終わっていた。</p>

<p><br /></p>

<p><strong>1月15日(日)　課題</strong></p>

<p>課題に追われた1日。結局ブログは書けなかった。</p>

<p><br /></p>

<p><strong>1月16日(月)　日記</strong></p>

<p>実はこれ以外にも個人的にもう1つ日記をつけているのだが、最近はすっかり書いていない。こっちの日記も更新が滞りつつあるが…</p>

<p><br /></p>

<p><strong>1月17日(火)　眠気</strong></p>

<p>最近眠気がひどい。9時頃にはもう眠くなる。</p>

<p><br /></p>

<p><strong>1月18日(水)　夢</strong></p>

<p>夢の中で目覚めるという不思議な体験をした。</p>

<p><br /></p>

<p><strong>1月19日(木)　バッテリー</strong></p>

<p>最近、スマホのバッテリーの減りが速い。0時に充電器から抜いて、7時頃見ると15%ほど減っている。常時表示ディスプレイが原因なのは明らかだが、昔はせいぜい6%くらいしか減らなかったんだよなぁ…</p>

<p><br /></p>

<p><strong>1月20日(金)　単語帳</strong></p>

<p>学校で配布された単語帳を Amazon で調べて、星1レビューのみを見ていたらやる気が失せた。</p>

<p><br /></p>

<p><strong>1月21日(土)　無駄な時間</strong></p>

<p>午前はブログを書いていたが、午後は無駄なことをただひたすらしていた。土曜日って、「明日も休みだしだらけてもいいやー」という気分になるので危険。</p>

<p><br /></p>

<p><strong>1月22日(日)　Ubuntu</strong></p>

<p>外付け HDD に Ubuntu を入れてみたが、HDD だと動作が重い。ChromeOS Flex にするか、それとも軽量ディストリを試すか。</p>

<p><br /></p>

<p><strong>1月23日(月)　修正作業</strong></p>

<p>使っているフレームワークのアップデートの影響で、やまだ BINGO がバグり散らかしていたことが判明。その修正作業を行った。</p>

<p><br /></p>

<p><strong>1月24日(火)　寒い</strong></p>

<p>寒い。凍え死にそう。</p>

<p><br /></p>

<p><strong>1月25日(水)　安堵</strong></p>

<p>夏頃から企画していたものがやっと (ほぼ) 完結した。達成感はもちろんあるが、どこか寂しさも感じる。しかし、実は来月にもとあるものを企画しているので、そちらに向けて動き出さねば。</p>

<p><br /></p>

<p><strong>1月26日(木)　サイト</strong></p>

<p>学校向けに作った、時間割や予定表、提出物、授業関連のリンクをまとめて確認できるサイトの認知度をあげようと色々やっている。ログイン処理も裏のデータベース管理も自分でプログラムを書いたのだが、Google サイトの類のものを使って実装していると勘違いされることがあって少し複雑な気持ち。(デザイン面でテンプレを使ったのは事実だが…)</p>

<p><br /></p>

<p><strong>1月27日(金)　確認不足</strong></p>

<p>部活の大会のルールが、自分たちが勝手に想像していたものとは違っていたことが判明。もっと早く確認していれば…</p>

<p><br /></p>

<p><strong>1月28日(土)　早寝</strong></p>

<p>今日こそは早く寝ようと思っても、結局いつもの時間になってしまう。</p>

<p><br /></p>

<p><strong>1月29日(日)　働き方改革</strong></p>

<p>ちょっと前まで休日出勤しまくっていたとある先生が、今日はいなかった。とりあえず過労死はなさそうで安心。</p>

<p><br /></p>

<p><strong>1月30日(月)　あと1日</strong></p>

<p>今日で1月が終わりだと思っていたが、あと1日あった。</p>

<p><br /></p>

<p><strong>1月31日(火)　文化の違い</strong></p>

<p>英語の書類を処理していたが、日本と文化が違って一筋縄ではいかなかった。なお、イギリス英語の書類だったのに日付表記をアメリカ式にしてしまったのは秘密。</p>]]></content><author><name>Frog</name></author><category term="一言日記" /><category term="一言日記" /><summary type="html"><![CDATA[実はかつて「蛙年」というのがありました。その後、とある人が「蛙といえば卵だろ！」と言って数百年前に「卵年」になったのですが、年末年始で忙しさで「卵」の点を抜かして「卯」と書く人が続出し、気づいたときには「卯年」になっていたそうです。つまり、「卯年」は元を辿れば「蛙年」なのです。(※諸説あり)]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.frogapp.net/assets/images/2023/01/02/diary-202301.webp" /><media:content medium="image" url="https://blog.frogapp.net/assets/images/2023/01/02/diary-202301.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">2022年を振りカエル</title><link href="https://blog.frogapp.net/2022-12/2022" rel="alternate" type="text/html" title="2022年を振りカエル" /><published>2022-12-31T00:00:00+09:00</published><updated>2022-12-31T00:00:00+09:00</updated><id>https://blog.frogapp.net/2022-12/2022</id><content type="html" xml:base="https://blog.frogapp.net/2022-12/2022"><![CDATA[<p>今年も残すところ5時間を切りました。2022年の最後の最後に、今年1年を振り返ってみます。</p>

<h2 id="2022年は変化の1年">2022年は「変化」の1年</h2>

<p>振り返ってみると、2022年は「変化」の1年だったのかなと思います。</p>

<p>独自ドメインを取ってみたり、ブログの週一更新を始めたり、一言日記をつけるようになったり、翻訳プロジェクトに参加するようになったり、Firefox 学生マーケティングチームに参加したり…</p>

<p>身近なところでは、コンタクトを (たまにですが) つけるようになったり、3年間一緒にいたスマホを買い替えたり、Linux のディストリビューションをいくつも試したり、基本情報取ったり、去年までの自分が絶対やらないような係をやるようになったり…</p>

<p>もともと自分は「変化」を求め続けている人ではあるのですが、今年は今まで以上に変化が大きかったように感じます。</p>

<h2 id="2022年の活動">2022年の活動</h2>

<p>今年1年間どのような活動を行ったのか、ここで総括してみようと思います。</p>

<h3 id="今年リリースしたアプリ">今年リリースしたアプリ</h3>

<ul>
  <li><a href="https://read.frogapp.net/" target="_blank" rel="noopener noreferrer">簡易テキスト読み上げくん</a></li>
  <li><a href="https://share.frogapp.net" target="_blank" rel="noopener noreferrer">Snapdrop JP</a></li>
  <li>文字数カウント <a href="https://chrome.google.com/webstore/detail/bhfihcmmnnagikobmgakbjliddjmfgmd" target="_blank" rel="noopener noreferrer">Chrome</a><a href="https://addons.mozilla.org/ja/firefox/addon/count-character/" target="_blank" rel="noopener noreferrer">Firefox</a></li>
  <li>やっぱり Noto Sans <a href="https://chrome.google.com/webstore/detail/oecglhldbofcklanmhckefiflhfhabdd" target="_blank" rel="noopener noreferrer">Chrome</a><a href="https://addons.mozilla.org/ja/firefox/addon/replace-with-noto/" target="_blank" rel="noopener noreferrer">Firefox</a></li>
</ul>

<p>今年は4つのアプリ (内2つはブラウザ拡張機能) をリリースしました。</p>

<p>アプリリリースの裏話については以前投稿しましたのでぜひご覧ください。</p>

<p><a href="https://blog.frogapp.net/2022-11/background">自分のアプリが作られた背景を語る</a></p>

<p>バンバンアプリを出しまくっていた2021年よりは少ないと思われるかも知れませんが、実は今年は非公開のアプリ (学校用など) の開発が多かったです。</p>

<p>また、リリースしたアプリの数は少ないですがヒット作も出ました。</p>

<p>「Snapdrop JP」と「やっぱり Noto Sans」です。</p>

<p>Snapdrop JP は月間約1,500回アクセスされ、やっぱり Noto Sans のユーザー数は約270人となっています。(2022/12/31現在)</p>

<p>みるみるうちにユーザー数が増えていくのを見て、モチベーションになっていました。</p>

<h3 id="ブログ">ブログ</h3>

<p><strong>2022年の執筆記事数：51本</strong></p>

<p>今年は1年間で51本の記事を公開しました。</p>

<p>数カ月間更新が止まった時期もありましたが、年間で平均すると大体週1本のペースになりました。</p>

<p>今年公開した記事のうち、アクセスが多かった上位3本の記事は以下のとおりです。</p>

<ul>
  <li><a href="https://blog.frogapp.net/2022-05/font">Chrome のフォントを美しい Noto Sans にする方法</a></li>
  <li><a href="https://blog.frogapp.net/2022-02/chromebook-start-like-windows">Chromebook のランチャーを Windows のスタートメニューっぽくする</a></li>
  <li><a href="https://blog.frogapp.net/2022-09/windows-key">LinuxやWindowsからOEM版Windowsのプロダクトキーを確認する方法</a></li>
</ul>

<p>アクセス数を伸ばすために記事を書いているわけではありませんが、やはり IT 系の記事が伸びやすい印象です。</p>

<p>来年も<strong>週1本</strong>を目指して更新を続けます。</p>

<h2 id="終わりに">終わりに</h2>

<p>2022年は「あっという間だった」と思う一方で、「色々なことに挑戦できた」とも思う1年でした。</p>

<p>2023年は今年以上に良い1年にしたいです。</p>

<p>それでは、良いお年をお迎えください。</p>]]></content><author><name>Frog</name></author><category term="雑記" /><category term="振り返り" /><category term="年末" /><summary type="html"><![CDATA[今年も残すところ5時間を切りました。2022年の最後の最後に、今年1年を振り返ってみます。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.frogapp.net/assets/images/2022/12/31/2022.webp" /><media:content medium="image" url="https://blog.frogapp.net/assets/images/2022/12/31/2022.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Qiita に投稿しました【基本情報に向けて行った勉強法や当日の注意点など】</title><link href="https://blog.frogapp.net/2022-12/fe" rel="alternate" type="text/html" title="Qiita に投稿しました【基本情報に向けて行った勉強法や当日の注意点など】" /><published>2022-12-24T00:00:00+09:00</published><updated>2022-12-24T00:00:00+09:00</updated><id>https://blog.frogapp.net/2022-12/fe</id><content type="html" xml:base="https://blog.frogapp.net/2022-12/fe"><![CDATA[<p>今週分の記事は久しぶりに Qiita に投稿しました。</p>

<p>ぜひご覧ください。</p>

<p><a href="https://qiita.com/FrogApp/items/272bfdffe6eb730c30ec" target="_blank" rel="noopener noreferrer">基本情報に向けて行った勉強法や当日の注意点など</a></p>]]></content><author><name>Frog</name></author><category term="雑記" /><category term="基本情報技術者試験" /><summary type="html"><![CDATA[今週分の記事は久しぶりに Qiita に投稿しました。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.frogapp.net/assets/images/2022/12/24/kitami.webp" /><media:content medium="image" url="https://blog.frogapp.net/assets/images/2022/12/24/kitami.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">改めて感じた Chromebook の良さ〜心配がいらない PC〜</title><link href="https://blog.frogapp.net/2022-12/chromebook" rel="alternate" type="text/html" title="改めて感じた Chromebook の良さ〜心配がいらない PC〜" /><published>2022-12-18T00:00:00+09:00</published><updated>2022-12-18T00:00:00+09:00</updated><id>https://blog.frogapp.net/2022-12/chromebook</id><content type="html" xml:base="https://blog.frogapp.net/2022-12/chromebook"><![CDATA[<p>個性的な CM が流れたり、GIGA スクール構想で大量導入されたりしてかなり知名度が上がった Chromebook。普段は Windows を使用している僕が久しぶりに使用してみて感じた良さを書きます。</p>

<p>※この記事で言う「Chromebook」は現在僕が使っているものを指します。全ての Chromebook で同じことが言えるとは限りませんのでご注意ください。</p>

<h2 id="なぜ-chromebook-を使っているの">なぜ Chromebook を使っているの？</h2>

<p>ご存知の通り、僕は普段は Windows、たまに気が向いた時に Linux を入れて使っており、Chromebook とは疎遠の存在です。</p>

<p>しかし、先月学校用兼メインの PC が壊れたので学校から代替機として Chromebook を借りて使用している、というわけです。</p>

<p>ちなみにメイン PC は先週いったん帰還したものの、申告した2つの症状の内1つが修理前よりも悪化していたので送り返し、只今再修理中です。</p>

<p>ということで、約1ヶ月間 Chromebook のみで生活しています。</p>

<h2 id="chromebook-は低スペックでもそれが良い">Chromebook は低スペック、でもそれが良い</h2>

<p>例外はありますが、市場に出ている Chromebook はだいたい低スペックです。Celeron CPU、4GB メモリ、32 or 64GB eMMCと数字だけで見たらたいへん心もとないスペックです。</p>

<p>でも、低スペックが必ずしも悪いとは限りません。</p>

<p>性能が低ければ、</p>

<ul>
  <li>消費電力が少ない→バッテリーが持つ</li>
  <li>発熱が少ない→ファンレスで静か</li>
  <li>低価格</li>
</ul>

<p>といった利点もあります。</p>

<p>先週普段の PC が一時帰還して触っていた際も、「ファンいちいち回るなよ」とか「もうバッテリー10%減ったの？」と感じました。</p>

<p>「じゃぁ低スペックな Windows ノートで良くない？できることも Windows のほうが多いし。」と思うかもしれませんが、Celeron CPU、4GB メモリ、32 or 64GB eMMC は Windows ではきついです。特にストレージ容量、64GB なんて Windows 11 の最低要件ですからね。まともに使えません。</p>

<p>しかも OS 自体が重い上にバックグラウンドで色々動いているので正直快適とは言えません。</p>

<p>一方の ChromeOS は、超軽量とは言いませんが少なくとも Windows よりは軽い上に、Chrome ブラウザーの使用に最適化されているのでよほどの重い作業をしない限りは普通に使えます。</p>

<p>「低スペックの利点を享受できる上にそこそこ快適」、というのが Chromebook です。</p>

<h2 id="特に感動したバッテリー持ち">特に感動したバッテリー持ち</h2>

<p>上で挙げた利点の中で、特に感動したのがバッテリー持ちです。</p>

<p>普段の PC は毎日充電が必須でしたが、Chromebook は2日に1回、場合によっては3日に1回の充電で事足ります。</p>

<p>また、Windows は次いつ使うかでシャットダウンや休止状態、スリープを使い分けていましたが、Chromebook はスリープ時の電力消費が抑えめなので基本スリープで大丈夫です。</p>

<p>使い終わったらとりあえず蓋を閉じる。たとえ次使うのが翌日だろうと翌々日だろうとです。</p>

<p>以前、金曜日にスリープして月曜まで放置していたことがありますが、それでもバッテリー消費は15%くらいでした。</p>

<p>普段の PC で同じことをやったらバッテリーはすっからかんになっているでしょう。</p>

<p>スリープ状態で放置してもバッテリーがなかなか空にならないというのは安心です。</p>

<h2 id="アップデートや同期も楽">アップデートや同期も楽</h2>

<p>あとはアップデートも楽です。</p>

<p>たまに「更新が必要なので再起動してくれ」という通知が来て再起動するのですが、Windows と違って再起動で待たされることはありません。</p>

<p>再起動ボタンを押してから再び使えるようになるまで1分程度で終わります。</p>

<p>同期に関しても、普段 Chrome で使っているデータがそのまま引き継がれるので Chrome 使いの人は楽だと思います。</p>

<p>僕は Firefox 派なのでちょっと大変でしたが…</p>

<p>あとは Google のクラウドに上げておけば Chromebook からも簡単にアクセスできるのは魅力です。</p>

<p>僕はプログラム以外のデータは基本 Google ドライブに上げており、文書やスライドも不都合がなければ Google ドキュメント・スライドで作成しているのでここらへんのデータに関しては心配無用でした。</p>

<h2 id="進化し続ける-os">進化し続ける OS</h2>

<p>ChromeOS はアップデートで少しずつ進化しています。</p>

<p>例えば、最近のアップデートでは待望のゴミ箱機能が実装されました。(「逆になんで今までなかったの？」という感じですが…)</p>

<p><img src="/assets/images/2022/12/18/trash.webp" alt="「ファイルアプリ」のゴミ箱の画面" title="「ファイルアプリ」のゴミ箱の画面" /></p>

<h2 id="残念だった点">残念だった点</h2>

<p>ここまで Chromebook の良い点ばかりを挙げてきましたが、もちろん残念な点もあります。</p>

<h3 id="できることは-windows-のほうが断然多い">できることは Windows のほうが断然多い</h3>

<p>プログラミングなど、Chromebook では難しいものもあります。</p>

<p>プログラミングは Linux 仮想環境を入れればできないことはないのですが、最適化されていないのと元々のスペックが低いので激重。</p>

<p>GitHub Codespace も使ってみましたが、開発用サーバー (いわゆる localhost) のレスポンスが遅すぎてとても快適とは言えませんでした。</p>

<p>プログラミングに関しては、ちゃんとしたスペックの PC でローカルでやるのが快適です。</p>

<h3 id="画面解像度が低い">画面解像度が低い</h3>

<p>市場の Chromebook の多くは HD 画質のディスプレイを搭載しています。普段使いには特に支障はないのですが、プログラミングのような細かい字を扱う作業には不向きです。</p>

<p>解像度の低さが原因でアルファベットの判別が付きづらく、作業効率が下がってしまうことが多々ありました。</p>

<p>外部ディスプレイに繋げば解決するのですが、毎回つなげるのは面倒です。</p>

<p>…と2つ残念な点を挙げましたが、お分かりの通りプログラミングのような高度な作業を Chromebook でやろうとした僕が悪いです。</p>

<p>逆にプログラミング以外ではほとんど欠点を感じていません。</p>

<h2 id="結論">結論</h2>

<p>以上、僕が Chromebook を1ヶ月ほど使ってみての感想でした。</p>

<p>この記事で伝えたいのは、「Chromebook 普通に使えるよ！！」ということです。</p>

<p>もちろん自分も久しぶりに Chromebook を使ってみて、Chromebook もいい PC だなと感じています。</p>

<p>従来は PC と言えば Windows 一強でしたが、今や Chromebook も強力な選択肢になっています。</p>

<p>プログラミングのような高度な作業には不向きですが、ブラウジングやメール、ちょっとした資料作成程度であれば Chromebook で十分対応できます。それも Windows より低価格で。</p>

<p>ということで、次 PC の購入を検討する場合には、「Chromebook？どうせポンコツでしょ？」と思わずにぜひ視野に入れてあげてください。</p>

<p>今週も読んでいただきありがとうございました。</p>

<h2 id="関連リンク">関連リンク</h2>

<p><a href="https://www.google.com/chromebook/" target="_blank" rel="noopener noreferrer">Google Chromebooks - ノートパソコン、セパレート タイプ、タブレット</a></p>]]></content><author><name>Frog</name></author><category term="PC" /><category term="PC" /><category term="Google" /><category term="Chromebook" /><summary type="html"><![CDATA[個性的な CM が流れたり、GIGA スクール構想で大量導入されたりしてかなり知名度が上がった Chromebook。普段は Windows を使用している僕が久しぶりに使用してみて感じた良さを書きます。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.frogapp.net/assets/images/2022/12/18/chromebook.webp" /><media:content medium="image" url="https://blog.frogapp.net/assets/images/2022/12/18/chromebook.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">自分に合ったニュースアプリを探し求めて</title><link href="https://blog.frogapp.net/2022-12/news" rel="alternate" type="text/html" title="自分に合ったニュースアプリを探し求めて" /><published>2022-12-11T00:00:00+09:00</published><updated>2022-12-11T00:00:00+09:00</updated><id>https://blog.frogapp.net/2022-12/news</id><content type="html" xml:base="https://blog.frogapp.net/2022-12/news"><![CDATA[<p>先日スマホを買い換えてアプリを入れ直していた際に、今まで使っていたニュースアプリを変えようと思い数種類試してみました。</p>

<p>注：予め言っておきますが、ここで紹介するアプリの運営会社・組織とはいずれも一切関わりがありません。もちろん提供記事でもありません。純粋に僕が感じたことを書いています。</p>

<p>また、紹介したアプリのダウンロード URL はこの記事の最後にまとめて掲載しています。</p>

<h2 id="ニュースアプリは2種類を併用">ニュースアプリは2種類を併用</h2>

<p>僕はニュースアプリを2種類併用しています。「自分の興味ある分野のニュースを見る用」と「世の中全般のニュースを知る用」の2つです。</p>

<p>「自分の興味ある分野のニュースを見る用」としては Flipboard を使用しています。こちらはキュレーションの精度が高い上、UI も見やすく大変気に入っています。</p>

<p>また、RSS を登録すれば、お気に入りのサイトの記事をアプリ内で読むことができます。</p>

<p>何なら、気になる人の Twitter アカウントを登録して、最新のツイートを追いかけることだってできます。</p>

<p>好きな分野のニュース、好きなブログの記事、好きな Twitter アカウントなど、自分の「好き」な情報が1箇所に集約されるのが Flipboard の特徴です。</p>

<p>ただし、使うのであれば設定からレイアウトを「スクロール」に変更することをおすすめします。初期設定では雑誌のようにめくっていく形式ですが、スクロールが面倒です。</p>

<p><img src="/assets/images/2022/12/11/flipboard.webp" alt="Flipboard" title="Flipboard" /></p>

<p>さて、問題は「世の中全般のニュースを知る用」の方です。今までは Google ニュースを使用していたのですが、使っているうちにだんだんと表示される記事の分野が偏ってきました。自分の場合は、テクノロジーの系のニュースがやたら出てくるようになりました。</p>

<p>考えてみれば当然のことなのですが、これでは「世の中全般のニュースを知る」という目的にそぐわなくなってしまいます。</p>

<p>また、ネットニュースでよくある「〇〇は〇〇？調べてみたら…」や「〇〇がヤバい！」といった見出しが不快に感じるようになってきたのもニュースアプリの乗り換えを決めた一因です。</p>

<p>ということで、様々な分野が万遍なく出てきて、かつ見出しも平穏なアプリを探しました。</p>

<h2 id="試したアプリ">試したアプリ</h2>

<p>パッと思いついたものを数種類試しただけですが、試したアプリは以下のとおりです。</p>

<ul>
  <li>スマートニュース</li>
  <li>NewsPicks</li>
  <li>グノシー</li>
  <li>Yahoo! ニュース</li>
  <li>NHK ニュース・防災</li>
</ul>

<p>たったの5種類ですが、そこはご容赦を…</p>

<p>使ってみた感想ですが、スマートニュース・グノシー・Yahoo! ニュースは他のニュースサイトから引っ張ってくる仕組みなので見出しが過激でした。とにかく PV を稼ぎたいという、提供元ニュースサイトの意思がひしひしと伝わってきます。</p>

<p>NewsPicks も他のサイトから引っ張ってきている (NewsPicks オリジナルコンテンツもあるが、こちらは有料会員限定なので割愛) のですが、見出しは割と平穏。</p>

<p>ただ、「経済ニュースアプリ」を名乗っているだけあって経済以外のニュースはあまり出てこないので候補から外れました。逆に経済ニュースを見たい人にはぜひおすすめしたいアプリです。</p>

<p>(どうでもいい話ですが、NewsPicks は「ニュースピックス」ではなく「ニュー<strong>ズ</strong>ピックス」と読むらしいです。)</p>

<p>ということで残った「NHK ニュース・防災」ですが、これが結構良かったです。万遍なくニュースが出てくる上、見出しもまさに「記事をそのまま要約した内容」で非常に快適。</p>

<p>変な思想の偏りもないし、無料で広告も出ません。</p>

<p>ということで、ニュースアプリはこれを使うことに決めました。</p>

<p><img src="/assets/images/2022/12/11/nhk-news.webp" alt="NHK ニュース・防災" title="NHK ニュース・防災" /></p>

<p>あと念のため言っておきますが、「NHK ニュース・防災」以外の試したアプリも決して悪いものではありません。ただ、僕が求めている目的や条件にそぐわなかっただけです。</p>

<h2 id="紹介したアプリの-url-一覧">紹介したアプリの URL 一覧</h2>

<p>最後にこの記事で紹介したアプリの URL を貼っておきます。気になったものがあればぜひインストールしてみてください。</p>

<ul>
  <li>Flipboard…<a href="https://apps.apple.com/jp/app/id358801284" target="_blank" rel="noopener noreferrer">iPhone</a>　<a href="https://play.google.com/store/apps/details?id=flipboard.app" target="_blank" rel="noopener noreferrer">Android</a></li>
  <li>スマートニュース…<a href="https://apps.apple.com/jp/app/id579581125" target="_blank" rel="noopener noreferrer">iPhone</a>　<a href="https://play.google.com/store/apps/details?id=jp.gocro.smartnews.android" target="_blank" rel="noopener noreferrer">Android</a></li>
  <li>NewsPicks…<a href="https://apps.apple.com/jp/app/id640956497" target="_blank" rel="noopener noreferrer">iPhone</a>　<a href="https://play.google.com/store/apps/details?id=com.newspicks" target="_blank" rel="noopener noreferrer">Android</a></li>
  <li>グノシー…<a href="https://apps.apple.com/jp/app/id590384791" target="_blank" rel="noopener noreferrer">iPhone</a>　<a href="https://play.google.com/store/apps/details?id=com.gunosy.android" target="_blank" rel="noopener noreferrer">Android</a></li>
  <li>Yahoo! ニュース…<a href="https://apps.apple.com/jp/app/id407906756" target="_blank" rel="noopener noreferrer">iPhone</a>　<a href="https://play.google.com/store/apps/details?id=jp.co.yahoo.android.news" target="_blank" rel="noopener noreferrer">Android</a></li>
  <li>NHK ニュース・防災…<a href="https://apps.apple.com/jp/app/id1121104608" target="_blank" rel="noopener noreferrer">iPhone</a>　<a href="https://play.google.com/store/apps/details?id=jp.or.nhk.news" target="_blank" rel="noopener noreferrer">Android</a></li>
</ul>]]></content><author><name>Frog</name></author><category term="スマホ" /><category term="スマホ" /><category term="アプリ" /><category term="ニュース" /><summary type="html"><![CDATA[先日スマホを買い換えてアプリを入れ直していた際に、今まで使っていたニュースアプリを変えようと思い数種類試してみました。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.frogapp.net/assets/images/2022/12/11/news-app.webp" /><media:content medium="image" url="https://blog.frogapp.net/assets/images/2022/12/11/news-app.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">予告と近況報告とアレの宣伝</title><link href="https://blog.frogapp.net/2022-12/plan" rel="alternate" type="text/html" title="予告と近況報告とアレの宣伝" /><published>2022-12-05T00:00:00+09:00</published><updated>2022-12-05T00:00:00+09:00</updated><id>https://blog.frogapp.net/2022-12/plan</id><content type="html" xml:base="https://blog.frogapp.net/2022-12/plan"><![CDATA[<p>今後このブログで書くこと・書きたいことです。すでに頭の中ではいくつかネタが思い浮かんでいるのですが、どこかに書き残しておかないと忘れそうなのでここに書いておきます。ついでに近況報告も兼ねています。</p>

<h2 id="12月の予告">12月の予告</h2>

<p>早いものでもう12月。先日「チコちゃんに叱られる」というテレビ番組でやっていたのですが、体感の時間が現実の時間よりも短く感じるのは19歳頃からだそうです。さて、自分は……</p>

<p>ということはおいておき、今月執筆する予定の記事の紹介です。よほどのことがない限り下記のとおりになると思います。</p>

<h3 id="1210-or-11使っているニュースアプリについて">12/10 or 11　使っているニュースアプリについて</h3>

<p><a href="/2022-11/diary">一言日記</a>でも少し触れたのですが、最近スマホを買い替えました。</p>

<p>前のスマホで使っていたアプリを入れ直しているときに、ふと今まで使っていたニュースアプリが肌に合わないなと感じたんですよね。</p>

<p>そこで主要なニュースアプリを色々使ってみて出た結論を書く予定です。</p>

<h3 id="1217-or-18改めて-chromebook-を使ってみて">12/17 or 18　改めて Chromebook を使ってみて</h3>

<p>こちらも<a href="/2022-11/diary">一言日記</a>で少し触れたのですが、最近メイン PC のベゼルが外れて使えなくなり、修理に出すという事態が発生しました。</p>

<p>壊れた PC は学校に持ち込んで授業でも使っていたので、急遽先生にお願いして代替機をお借りしました。そこで貸し出されたのが Chromebook。</p>

<p>いわゆる教育用のやつでスペックも大して良くないしデザインもかなりゴツいのですが、数週間使っていて「こいつもこいつでアリかもしれない」と思い始めたのでそれについて書きます。</p>

<p>ちなみに PC は修理に出してそろそろ2週間が経ちますが、未だに帰ってきません。というか修理費の見積もりメールすら来ません。（迷惑メールフォルダ等くまなく探したが見つからず）</p>

<p>来週いっぱい様子を見て、それでも音沙汰なしのようなら一度連絡を入れてみようと思っています。</p>

<h3 id="1224基本情報の勉強法">12/24　基本情報の勉強法</h3>

<p>こちらも一言ｎ……ですが、先月「基本情報技術者試験」を受け合格したので、僕が基本情報に向けて行った勉強法を書く予定です。</p>

<p>※基本情報技術者試験…「IT エンジニアの登竜門」とも言われる国家試験。</p>

<p>来年度からの新制度にも触れないといけないと思うので、相当な文量になる予感がしています。</p>

<p>あと、この記事は久しぶりに Qiita に投稿してみようかと思っています。</p>

<h3 id="12312022年の総括">12/31　2022年の総括</h3>

<p>2022年の最終日。今年1年を振り返る記事を書きます。</p>

<h2 id="今後書きたい記事">今後書きたい記事</h2>

<p>以下のテーマはあくまでも「機会があったら書いてみたいなー」程度のものなので、実際に記事になるかは未確定です。</p>

<ul>
  <li>クロスブラウザなパスワードマネージャーを探した話</li>
  <li>新スマホのレビュー</li>
  <li>SIM PIN の話</li>
  <li>外付けストレージに ChromeOS Flex をインストールする方法</li>
  <li>ブログは何のため？</li>
  <li>今後のスマホ廉価販売の個人的予想</li>
  <li>おすすめのプログラミング勉強法</li>
</ul>

<p>以上、「今後このブログで書くこと・書きたいこと」兼「近況報告」兼「一言日記の宣伝」でした。ここまで読んでいただきありがとうございました。</p>]]></content><author><name>Frog</name></author><category term="お知らせ" /><category term="お知らせ" /><category term="予告" /><summary type="html"><![CDATA[今後このブログで書くこと・書きたいことです。すでに頭の中ではいくつかネタが思い浮かんでいるのですが、どこかに書き残しておかないと忘れそうなのでここに書いておきます。ついでに近況報告も兼ねています。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.frogapp.net/assets/images/2022/12/04/plan.webp" /><media:content medium="image" url="https://blog.frogapp.net/assets/images/2022/12/04/plan.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>